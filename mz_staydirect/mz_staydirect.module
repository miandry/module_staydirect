<?php
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\user\Entity\User;

/**
 * @file
 * Contains mz_chat.module.
 */

function mz_staydirect_form_alter(&$form, &$form_state, $form_id)  {

  if ($form_id == 'user_login_form') {
    $form['#theme'] = 'user_login_form_custom';
  }
  
  if ($form_id == 'user_form') {
    $form['actions']['submit']['#submit'][] = '_mz_staydirect_custom_submit';
  }
}
/**
 * Custom submit handler for user profile edit form.
 */
function _mz_staydirect_custom_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  // Get the current user and the user entity being edited.
  $current_user = \Drupal::currentUser();
  $user = $form_state->getFormObject()->getEntity();
  // Check if the current user is editing their own account.
  if ($current_user->id() == $user->id()) {
      $template_config = \Drupal::config('mz_payement.status');
      $status = $template_config->get( 'status');
      $site_variables = $template_config->get( 'site_variables');

      //template only
      if($status && $site_variables){
        $config = \Drupal::config('mz_payement.stripe');
        $accountId =  $config->get('account');
      
        if($accountId == NULL){
          $external_url = "/admin/bank/page";
          $response = new RedirectResponse($external_url, 302);
          $response->send();
          return;
          
        }
      }
  }
}
/**
 * Implements hook_theme_suggestions_HOOK_alter() for the user login form.
 */
function mz_staydirect_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['form']) && $variables['form']['#form_id'] === 'user_login_form') {
    $suggestions[] = 'form__user_login';
  }
  if (isset($variables['form']) && $variables['form']['#form_id'] === 'user_login_form') {
    $suggestions[] = 'form__user_register';
  }
  if (isset($variables['form']) && $variables['form']['#form_id'] === 'user_login_form') {
    $suggestions[] = 'form__user_pass';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mz_staydirect_preprocess_block(&$variables) {
  if(isset($variables['content']) && isset($variables['content']['#block_content'])){
    global $site_variables ;
    $block_object = $variables['content']['#block_content'];
    $type = $block_object->bundle();
    $service_booking = \Drupal::service('mz_booking.manager');

    $variables['#cache']['max-age'] = 0;
    if($type =='header'){
      $variables['site_variables'] = $site_variables;
    }
    if($type == "contact"){
    
      $service = \Drupal::service('drupal.helper');
      $params = $service->helper->get_parameter();
      if(isset($params['email']) && isset($params['request_body'])){
          $config = \Drupal::config('mz_staydirect.settings');
          $site_infos = $config->get('site_variables');
          $email = \Drupal::config('system.site')->get('mail');
          if( isset($site_infos["email"])){
            $email = $site_infos["email"];
          }
          
         $status =  $service->helper->send_mail_simple($params['request_body'], $email ,$params['email'],'Send Request ');
         if(  $status ) {
          $message = "Your request is sent successfully...";
          \Drupal::messenger()->addMessage($message);
         }else {
          $message =  "Your request could not be sent...";
          \Drupal::messenger()->addMessage($message,'error');
         }
      }

    }
  }
}
/**
 * Implements hook_cron().
 *
 * Cette fonction est exécutée chaque fois que le cron de Drupal est lancé.
 */

function mz_staydirect_cron() {
  \Drupal::logger('mz_staydirect')->info('Tâche cron personnalisée exécutée à @time.', ['@time' => date('Y-m-d H:i:s')]);
} 

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function mz_staydirect_preprocess_page(&$variables) {
  global $site_variables ;
  if($site_variables && $site_variables["email"] && isset($site_variables["site_theme"])){
      // Check the value of a configuration variable.
      $config = \Drupal::config('mz_staydirect.settings');
      $site_infos = $config->get('site_variables');
      if($site_infos == null ){
          \Drupal::configFactory()->getEditable('mz_staydirect.settings')
          ->set('site_variables',$site_variables)
          ->save();
      }
  }
}
function mz_staydirect_preprocess_html(&$variables) {
  $service_helper = \Drupal::service('drupal.helper');
  $params = $service_helper->helper->get_parameter();
  if(isset($params['cache']) && $params['cache']==1 ){
    drupal_flush_all_caches();
  }

  $config = \Drupal::config('mz_staydirect.settings');
  $ckeck_database = $config->get('ckeck_database');
  if($ckeck_database == NULL){
     $service_manage = \Drupal::service('mz_staydirect.manage');
     $status = $service_manage->checkDrupalRequiredTables('default');
     if($status == 1){
        header("Location: https://staydirecttech.com/order");
        exit();
     }
     \Drupal::configFactory()->getEditable('mz_staydirect.settings')
     ->set('ckeck_database','ready')
    ->save();
  }

}




/**
 * Implements hook_theme().
 */
function mz_staydirect_theme() {
  return [
    'user_login_form_custom' => [
      'render element' => 'form',
      'template' => 'user-login-form-custom', // Twig template name.
    ],
  ];
}

